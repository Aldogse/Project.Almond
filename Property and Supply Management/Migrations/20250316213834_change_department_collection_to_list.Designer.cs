// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Property_and_Supply_Management.Database;

#nullable disable

namespace Property_and_Supply_Management.Migrations
{
    [DbContext(typeof(PAS_DBContext))]
    [Migration("20250316213834_change_department_collection_to_list")]
    partial class change_department_collection_to_list
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Contracts_and_Models.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("contact_person_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("department_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            contact_person_email = "",
                            department_name = "Administration & Management Department"
                        },
                        new
                        {
                            Id = 2,
                            contact_person_email = "",
                            department_name = "Patient Services Department"
                        },
                        new
                        {
                            Id = 3,
                            contact_person_email = "",
                            department_name = "Medical & Clinical Department"
                        },
                        new
                        {
                            Id = 4,
                            contact_person_email = "",
                            department_name = "Pharmacy & Medication Management Department"
                        },
                        new
                        {
                            Id = 5,
                            contact_person_email = "",
                            department_name = "Laboratory & Diagnostics Department"
                        },
                        new
                        {
                            Id = 6,
                            contact_person_email = "",
                            department_name = "Front Desk & Customer Relations Department"
                        },
                        new
                        {
                            Id = 7,
                            contact_person_email = "",
                            department_name = "Finance & Accounting Department"
                        },
                        new
                        {
                            Id = 8,
                            contact_person_email = "",
                            department_name = "Human Resources Department"
                        },
                        new
                        {
                            Id = 9,
                            contact_person_email = "",
                            department_name = "Information Technology (IT) Department"
                        },
                        new
                        {
                            Id = 10,
                            contact_person_email = "",
                            department_name = "Engineering & Maintenance Department"
                        });
                });

            modelBuilder.Entity("Contracts_and_Models.Models.DisposedItem", b =>
                {
                    b.Property<int>("disposal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("disposal_id"), 1L, 1);

                    b.Property<DateTime>("DisposalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisposalMethod")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("item_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("disposal_id");

                    b.ToTable("DisposedItems");
                });

            modelBuilder.Entity("Contracts_and_Models.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("User")
                        .HasColumnType("int");

                    b.Property<string>("asset_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("item_type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("maintenance_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("purchase_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("AssignedTo");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Contracts_and_Models.Models.MaintenanceItem", b =>
                {
                    b.Property<int>("maintenance_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("maintenance_Id"), 1L, 1);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("item_id")
                        .HasColumnType("int");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("datetime2");

                    b.HasKey("maintenance_Id");

                    b.HasIndex("item_id");

                    b.ToTable("MaintenanceItems");
                });

            modelBuilder.Entity("Contracts_and_Models.Models.Item", b =>
                {
                    b.HasOne("Contracts_and_Models.Models.Department", "Department")
                        .WithMany("items_in_possesion")
                        .HasForeignKey("AssignedTo");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Contracts_and_Models.Models.MaintenanceItem", b =>
                {
                    b.HasOne("Contracts_and_Models.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Contracts_and_Models.Models.Department", b =>
                {
                    b.Navigation("items_in_possesion");
                });
#pragma warning restore 612, 618
        }
    }
}
